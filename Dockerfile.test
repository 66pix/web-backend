FROM node:7

ARG NPM_TOKEN

ENV TZ=Pacific/Auckland
RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone

RUN apt-key adv --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys 58118E89F3A912897C070ADBF76221572C52609D
RUN echo "deb http://apt.dockerproject.org/repo debian-jessie main" >> /etc/apt/sources.list.d/docker.list

#RUN wget http://security.debian.org/debian-security/pool/updates/main/a/apt/libapt-pkg4.12_1.0.9.8.4_amd64.deb
#RUN dpkg -i libapt-pkg4.12_1.0.9.8.4_amd64.deb
#
#RUN wget http://security.debian.org/debian-security/pool/updates/main/a/apt/apt-transport-https_1.0.9.8.4_amd64.deb
#RUN dpkg -i apt-transport-https_1.0.9.8.4_amd64.deb

RUN apt-get update --fix-missing
RUN DEBIAN_FRONTEND=noninteractive apt-get install -y python-pip docker docker-engine postgresql zip

ENV NODE_ENV="development"
RUN npm install --silent -g eslint typings typescript tslint nsp yarn

COPY ./test-helpers/.npmrc /tmp/.npmrc
ADD package.json /tmp/package.json
#ADD npm-shrinkwrap.json /tmp/npm-shrinkwrap.json
ADD yarn.lock /tmp/yarn.lock
RUN cd /tmp && yarn
RUN mkdir -p /opt/app && cp -a /tmp/node_modules /opt/app/
RUN rm -f .npmrc

WORKDIR /opt/app
ADD . /opt/app

CMD /opt/app/test-lambci.sh
